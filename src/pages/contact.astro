---
import BaseLayout from "../layouts/BaseLayout.astro";
---

<BaseLayout title="Contact Us" description="Get in touch with The Shattered Crown Minecraft server team.">
  <main>
    <h1>Contact Us</h1>
    <p>If you have any questions or want to get in touch, please fill out the form below or reach us through our social channels.</p>

    <form id="contact-form" action="https://formsubmit.co/k.race03@hotmail.com" method="POST" novalidate>
      <label for="name">Name</label>
      <input type="text" id="name" name="name" placeholder="Your full name" required aria-required="true" aria-describedby="name-warning" />
      <div id="name-warning" class="input-warning" aria-live="polite">Please enter your name.</div>

      <label for="email">Email</label>
      <input type="email" id="email" name="email" placeholder="you@example.com" required />
      <div id="email-warning" class="input-warning">Please enter a valid email address.</div>

      <label for="message">Message</label>
      <textarea id="message" name="message" placeholder="Write your message here..." required maxlength="1500"></textarea>
      <div id="message-warning" class="input-warning">Please enter your message.</div>
      <div id="message-count">0 / 1500 characters</div>

      <input type="text" name="_gotcha" style="display:none" tabindex="-1" autocomplete="off" aria-hidden="true" />

      <button type="submit">Send Message</button>

      <div class="spinner-overlay" id="spinner">
        <div class="spinner"></div>
      </div>
    </form>

    <section id="faq" aria-label="Frequently Asked Questions">
      <h2>Frequently Asked Questions</h2>
      <details>
        <summary>How long does it take to get a response?</summary>
        <p>We usually respond within 24-48 hours on business days.</p>
      </details>
      <details>
        <summary>Can I report a bug or issue with the server?</summary>
        <p>Yes, please use the contact form or visit our forums to report bugs.</p>
      </details>
      <details>
        <summary>Do you have any rules for the server?</summary>
        <p>Yes, please review our <a href="/rules">Rules</a> page for detailed information.</p>
      </details>
    </section>
  </main>

  <style>
    main {
      padding: 2rem;
      max-width: 600px;
      margin: auto;
      color: #ccc;
      flex-grow: 1;
      text-align: center;
    }
    main h1 {
      font-family: 'Cinzel', serif;
      color: #d49a2a;
      font-weight: 700;
      font-size: 3rem;
      text-align: center;
      margin-bottom: 0.3rem;
    }
    main p {
      margin-bottom: 2rem;
      font-size: 1.1rem;
      color: #ccc;
    }
    form {
      margin: 0 auto;
      display: flex;
      flex-direction: column;
      gap: 1.2rem;
      background-color: #222831;
      padding: 2rem;
      border-radius: 8px;
      border: 1px solid #444;
      max-width: 100%;
      text-align: left;
      position: relative;
    }
    label {
      font-weight: 600;
      margin-bottom: 0.3rem;
      display: block;
      color: #ddd;
    }
    input[type="text"],
    input[type="email"],
    textarea {
      padding: 0.6rem;
      border: 1px solid #444;
      border-radius: 4px;
      background-color: #121821;
      color: #ddd;
      font-size: 1rem;
      font-family: inherit;
      resize: vertical;
      min-height: 40px;
      transition: border-color 0.3s ease;
      outline: none;
    }
    input[type="text"]:focus,
    input[type="email"]:focus,
    textarea:focus {
      border-color: #d49a2a;
      background-color: #1f2937;
    }
    textarea {
      min-height: 120px;
    }
    button[type="submit"] {
      background-color: #d49a2a;
      color: #121821;
      font-weight: 700;
      border: none;
      padding: 0.75rem 1.5rem;
      border-radius: 4px;
      cursor: pointer;
      font-size: 1rem;
      width: fit-content;
      transition: background-color 0.3s ease;
      align-self: flex-start;
      position: relative;
      z-index: 2;
    }
    button[type="submit"]:hover {
      background-color: #f4c04d;
    }
    .input-warning {
      display: none;
      background-color: #f44336;
      color: #fff;
      font-size: 0.85rem;
      padding: 6px 10px;
      border-radius: 4px;
      margin-top: 6px;
      animation: fadeIn 0.3s ease-in-out;
    }
    .input-error {
      border-color: #f44336 !important;
    }
    #message-count {
      font-size: 0.85rem;
      color: #999;
      text-align: right;
      margin-top: 4px;
    }
    .spinner-overlay {
      display: none;
      position: absolute;
      inset: 0;
      background: rgba(18, 24, 33, 0.8);
      border-radius: 8px;
      align-items: center;
      justify-content: center;
      z-index: 10;
    }
    .spinner {
      border: 5px solid #ddd;
      border-top: 5px solid #d49a2a;
      border-radius: 50%;
      width: 50px;
      height: 50px;
      animation: spin 1s linear infinite;
    }
    @keyframes spin {
      to { transform: rotate(360deg); }
    }
    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(-5px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
    #faq {
      max-width: 600px;
      margin: 3rem auto 1rem;
      color: #ccc;
      text-align: left;
    }
    #faq h2 {
      font-family: 'Cinzel', serif;
      color: #d49a2a;
      font-weight: 700;
      font-size: 2rem;
      margin-bottom: 1rem;
      text-align: center;
    }
    #faq details {
      background: #222831;
      border: 1px solid #444;
      border-radius: 6px;
      margin-bottom: 1rem;
      padding: 1rem;
      cursor: pointer;
    }
    #faq details summary {
      font-weight: 600;
      outline: none;
      cursor: pointer;
    }
    #faq details[open] {
      background: #2c3641;
    }
    @media (max-width: 768px) {
      main {
        padding: 1rem;
      }
      #faq {
        padding: 0 1rem;
      }
    }
  </style>
  <script is:inline>
    const form = document.getElementById('contact-form');
    const nameInput = document.getElementById('name');
    const emailInput = document.getElementById('email');
    const messageInput = document.getElementById('message');
    const nameWarning = document.getElementById('name-warning');
    const emailWarning = document.getElementById('email-warning');
    const messageWarning = document.getElementById('message-warning');
    const messageCount = document.getElementById('message-count');
    const spinner = document.getElementById('spinner');

    messageInput.addEventListener('input', () => {
      messageCount.textContent = `${messageInput.value.length} / 1500 characters`;
    });

    const validateField = (input, warningEl, validator) => {
      if (!validator(input.value.trim())) {
        input.classList.add('input-error');
        warningEl.style.display = 'block';
        return false;
      } else {
        input.classList.remove('input-error');
        warningEl.style.display = 'none';
        return true;
      }
    };

    [nameInput, emailInput, messageInput].forEach((input, i) => {
      const warnings = [nameWarning, emailWarning, messageWarning];
      const validators = [
        val => val.length > 0,
        val => /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(val),
        val => val.length > 0
      ];
      input.addEventListener('input', () => {
        validateField(input, warnings[i], validators[i]);
      });
    });

    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      const isNameValid = validateField(nameInput, nameWarning, val => val.length > 0);
      const isEmailValid = validateField(emailInput, emailWarning, val =>
        /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(val)
      );
      const isMessageValid = validateField(messageInput, messageWarning, val => val.length > 0);
      if (!isNameValid || !isEmailValid || !isMessageValid) return;

      spinner.style.display = 'flex';

      const data = new FormData(form);
      try {
        const res = await fetch(form.action, {
          method: form.method,
          headers: { 'Accept': 'application/json' },
          body: data
        });
        if (res.ok) {
          window.location.href = '/thankyou';
        } else {
          alert('Oops! There was a problem submitting your form.');
        }
      } catch {
        alert('Oops! There was a problem submitting your form.');
      } finally {
        spinner.style.display = 'none';
      }
    });
  </script>
</BaseLayout>